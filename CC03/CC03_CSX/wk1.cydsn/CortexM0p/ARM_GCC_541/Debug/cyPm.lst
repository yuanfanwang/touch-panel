ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	2
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 6.0
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** 
  23:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  25:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  26:Generated_Source\PSoC4/cyPm.c **** *
  27:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  28:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  29:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  30:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *
  32:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  33:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  34:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 34 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  35:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  36:Generated_Source\PSoC4/cyPm.c **** 
  37:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  36              		.loc 1 37 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  38:Generated_Source\PSoC4/cyPm.c **** 
  39:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  40:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  39              		.loc 1 40 0
  40 0006 044A     		ldr	r2, .L2
  41 0008 1368     		ldr	r3, [r2]
  42 000a 0421     		movs	r1, #4
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
  41:Generated_Source\PSoC4/cyPm.c **** 
  42:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  43:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  45              		.loc 1 43 0
  46              		.syntax divided
  47              	@ 43 "Generated_Source\PSoC4\cyPm.c" 1
  48 0010 30BF     		WFI 
  49              	
  50              	@ 0 "" 2
  44:Generated_Source\PSoC4/cyPm.c **** 
  45:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  51              		.loc 1 45 0
  52              		.thumb
  53              		.syntax unified
  54 0012 FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL1:
  46:Generated_Source\PSoC4/cyPm.c **** }
  56              		.loc 1 46 0
  57              		@ sp needed
  58 0016 10BD     		pop	{r4, pc}
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 10ED00E0 		.word	-536810224
  63              		.cfi_endproc
  64              	.LFE1:
  65              		.size	CySysPmSleep, .-CySysPmSleep
  66              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  67              		.align	2
  68              		.global	CySysPmDeepSleep
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 3


  69              		.code	16
  70              		.thumb_func
  71              		.type	CySysPmDeepSleep, %function
  72              	CySysPmDeepSleep:
  73              	.LFB2:
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** 
  49:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  51:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  52:Generated_Source\PSoC4/cyPm.c **** *
  53:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  54:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  55:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  56:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  57:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  58:Generated_Source\PSoC4/cyPm.c **** *
  59:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  60:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  61:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  62:Generated_Source\PSoC4/cyPm.c **** *
  63:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  64:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  65:Generated_Source\PSoC4/cyPm.c **** {
  74              		.loc 1 65 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  66:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  67:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  69:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  70:Generated_Source\PSoC4/cyPm.c ****     
  71:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  72:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 pllResoreFlag = 0u;
  84              		.loc 1 72 0
  85 0004 0023     		movs	r3, #0
  86 0006 0193     		str	r3, [sp, #4]
  87              	.LVL2:
  73:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  74:Generated_Source\PSoC4/cyPm.c **** 
  75:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  76:Generated_Source\PSoC4/cyPm.c ****         uint32 regTmp = 0u;
  77:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  78:Generated_Source\PSoC4/cyPm.c ****     
  79:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  88              		.loc 1 79 0
  89 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  90              	.LVL3:
  91 000c 0400     		movs	r4, r0
  92              	.LVL4:
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 4


  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  82:Generated_Source\PSoC4/cyPm.c ****         if(0u != (CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
  93              		.loc 1 82 0
  94 000e 204B     		ldr	r3, .L9
  95 0010 1B68     		ldr	r3, [r3]
  96 0012 DB07     		lsls	r3, r3, #31
  97 0014 06D5     		bpl	.L5
  83:Generated_Source\PSoC4/cyPm.c ****         {
  84:Generated_Source\PSoC4/cyPm.c ****             pllResoreFlag = 1u;
  98              		.loc 1 84 0
  99 0016 0123     		movs	r3, #1
 100 0018 0193     		str	r3, [sp, #4]
  85:Generated_Source\PSoC4/cyPm.c ****             
  86:Generated_Source\PSoC4/cyPm.c ****             /* Set default state = IMO for HFCLK_SEL bit mask */
  87:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 101              		.loc 1 87 0
 102 001a 1E4A     		ldr	r2, .L9+4
 103 001c 1368     		ldr	r3, [r2]
 104 001e 0321     		movs	r1, #3
 105 0020 8B43     		bics	r3, r1
 106 0022 1360     		str	r3, [r2]
 107              	.L5:
  88:Generated_Source\PSoC4/cyPm.c ****         }
  89:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  90:Generated_Source\PSoC4/cyPm.c **** 
  91:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  92:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  93:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  94:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  95:Generated_Source\PSoC4/cyPm.c **** 
  96:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  97:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  98:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.c ****     
 100:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 101:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 108              		.loc 1 101 0
 109 0024 1C4B     		ldr	r3, .L9+8
 110 0026 1B68     		ldr	r3, [r3]
 111 0028 5B00     		lsls	r3, r3, #1
 112 002a 0CD5     		bpl	.L6
 102:Generated_Source\PSoC4/cyPm.c ****         {
 103:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 113              		.loc 1 103 0
 114 002c 1B48     		ldr	r0, .L9+12
 115 002e 0168     		ldr	r1, [r0]
 116 0030 1B4B     		ldr	r3, .L9+16
 117 0032 1940     		ands	r1, r3
 118              	.LVL5:
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 119              		.loc 1 104 0
 120 0034 1B4B     		ldr	r3, .L9+20
 121 0036 1A68     		ldr	r2, [r3]
 122 0038 131D     		adds	r3, r2, #4
 105:Generated_Source\PSoC4/cyPm.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) << 
 123              		.loc 1 105 0
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 5


 124 003a 9B05     		lsls	r3, r3, #22
 125 003c FF22     		movs	r2, #255
 126 003e 9205     		lsls	r2, r2, #22
 127 0040 1340     		ands	r3, r2
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 128              		.loc 1 104 0
 129 0042 0B43     		orrs	r3, r1
 130 0044 0360     		str	r3, [r0]
 131              	.LVL6:
 132              	.L6:
 106:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 107:Generated_Source\PSoC4/cyPm.c ****         }
 108:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
 111:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
 133              		.loc 1 111 0
 134 0046 184B     		ldr	r3, .L9+24
 135 0048 1B88     		ldrh	r3, [r3]
 136 004a 9BB2     		uxth	r3, r3
 137 004c 174A     		ldr	r2, .L9+28
 138 004e 1360     		str	r3, [r2]
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 114:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 139              		.loc 1 114 0
 140 0050 174A     		ldr	r2, .L9+32
 141 0052 1168     		ldr	r1, [r2]
 142 0054 0423     		movs	r3, #4
 143 0056 0B43     		orrs	r3, r1
 144 0058 1360     		str	r3, [r2]
 115:Generated_Source\PSoC4/cyPm.c **** 
 116:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 117:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
 118:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
 119:Generated_Source\PSoC4/cyPm.c ****         */
 120:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 121:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 122:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 123:Generated_Source\PSoC4/cyPm.c ****     
 124:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
 125:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 145              		.loc 1 125 0
 146              		.syntax divided
 147              	@ 125 "Generated_Source\PSoC4\cyPm.c" 1
 148 005a 30BF     		WFI 
 149              	
 150              	@ 0 "" 2
 126:Generated_Source\PSoC4/cyPm.c **** 
 127:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 128:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 129:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 130:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 131:Generated_Source\PSoC4/cyPm.c **** 
 132:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 151              		.loc 1 133 0
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 6


 152              		.thumb
 153              		.syntax unified
 154 005c 0E4B     		ldr	r3, .L9+8
 155 005e 1B68     		ldr	r3, [r3]
 156 0060 5B00     		lsls	r3, r3, #1
 157 0062 0AD5     		bpl	.L7
 134:Generated_Source\PSoC4/cyPm.c ****         {
 135:Generated_Source\PSoC4/cyPm.c ****             CyDelayUs(CY_PM_WCO_DPLL_WAKEUP_DELAY);
 158              		.loc 1 135 0
 159 0064 2320     		movs	r0, #35
 160 0066 FFF7FEFF 		bl	CyDelayUs
 161              	.LVL7:
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 162              		.loc 1 136 0
 163 006a 0C4A     		ldr	r2, .L9+12
 164 006c 1168     		ldr	r1, [r2]
 165 006e 0C4B     		ldr	r3, .L9+16
 166 0070 0B40     		ands	r3, r1
 167              	.LVL8:
 137:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 168              		.loc 1 137 0
 169 0072 FF21     		movs	r1, #255
 170 0074 8905     		lsls	r1, r1, #22
 171 0076 0B43     		orrs	r3, r1
 172              	.LVL9:
 173 0078 1360     		str	r3, [r2]
 174              	.L7:
 138:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 139:Generated_Source\PSoC4/cyPm.c ****         }
 140:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */    
 141:Generated_Source\PSoC4/cyPm.c ****     
 142:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 143:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 144:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 145:Generated_Source\PSoC4/cyPm.c **** 
 146:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
 147:Generated_Source\PSoC4/cyPm.c ****         if(0u != pllResoreFlag)
 175              		.loc 1 147 0
 176 007a 019B     		ldr	r3, [sp, #4]
 177 007c 002B     		cmp	r3, #0
 178 007e 02D0     		beq	.L8
 148:Generated_Source\PSoC4/cyPm.c ****         {
 149:Generated_Source\PSoC4/cyPm.c ****             CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_PLL0);
 179              		.loc 1 149 0
 180 0080 0620     		movs	r0, #6
 181 0082 FFF7FEFF 		bl	CySysClkWriteHfclkDirect
 182              	.LVL10:
 183              	.L8:
 150:Generated_Source\PSoC4/cyPm.c ****         }
 151:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */    
 152:Generated_Source\PSoC4/cyPm.c **** 
 153:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 184              		.loc 1 153 0
 185 0086 2000     		movs	r0, r4
 186 0088 FFF7FEFF 		bl	CyExitCriticalSection
 187              	.LVL11:
 154:Generated_Source\PSoC4/cyPm.c **** }
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 7


 188              		.loc 1 154 0
 189 008c 02B0     		add	sp, sp, #8
 190              		@ sp needed
 191              	.LVL12:
 192 008e 10BD     		pop	{r4, pc}
 193              	.L10:
 194              		.align	2
 195              	.L9:
 196 0090 00002F40 		.word	1076822016
 197 0094 28000340 		.word	1073938472
 198 0098 00002240 		.word	1075970048
 199 009c 08002240 		.word	1075970056
 200 00a0 FFFF3FC0 		.word	-1069547521
 201 00a4 0C0F0340 		.word	1073942284
 202 00a8 52F2FF0F 		.word	268431954
 203 00ac 04000340 		.word	1073938436
 204 00b0 10ED00E0 		.word	-536810224
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 208              		.section	.text.CySysPmSetWakeupHoldoff,"ax",%progbits
 209              		.align	2
 210              		.global	CySysPmSetWakeupHoldoff
 211              		.code	16
 212              		.thumb_func
 213              		.type	CySysPmSetWakeupHoldoff, %function
 214              	CySysPmSetWakeupHoldoff:
 215              	.LFB3:
 155:Generated_Source\PSoC4/cyPm.c **** 
 156:Generated_Source\PSoC4/cyPm.c **** 
 157:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 158:Generated_Source\PSoC4/cyPm.c **** 
 159:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 160:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 161:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 162:Generated_Source\PSoC4/cyPm.c ****     *
 163:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 164:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 165:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 166:Generated_Source\PSoC4/cyPm.c ****     *
 167:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 168:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 169:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 170:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 171:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 172:Generated_Source\PSoC4/cyPm.c ****     *
 173:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 174:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 175:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 176:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 177:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 178:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 179:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 180:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 181:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 182:Generated_Source\PSoC4/cyPm.c ****     *
 183:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 8


 184:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 185:Generated_Source\PSoC4/cyPm.c ****     {
 186:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 187:Generated_Source\PSoC4/cyPm.c **** 
 188:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/cyPm.c **** 
 190:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 191:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 192:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 193:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 194:Generated_Source\PSoC4/cyPm.c **** 
 195:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 196:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 197:Generated_Source\PSoC4/cyPm.c **** 
 198:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 199:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 205:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 206:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 207:Generated_Source\PSoC4/cyPm.c ****          */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 211:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 212:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 213:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 216:Generated_Source\PSoC4/cyPm.c **** 
 217:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 218:Generated_Source\PSoC4/cyPm.c ****     }
 219:Generated_Source\PSoC4/cyPm.c **** 
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 222:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 223:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 224:Generated_Source\PSoC4/cyPm.c ****     *
 225:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 226:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 227:Generated_Source\PSoC4/cyPm.c ****     *
 228:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 229:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 230:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 231:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 232:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 233:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 234:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 235:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 238:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 239:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 240:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 9


 241:Generated_Source\PSoC4/cyPm.c ****     *
 242:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 243:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 244:Generated_Source\PSoC4/cyPm.c ****     {
 245:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 246:Generated_Source\PSoC4/cyPm.c **** 
 247:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 249:Generated_Source\PSoC4/cyPm.c **** 
 250:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 251:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 252:Generated_Source\PSoC4/cyPm.c **** 
 253:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 254:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 257:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 258:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 259:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 260:Generated_Source\PSoC4/cyPm.c ****          */
 261:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 262:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 263:Generated_Source\PSoC4/cyPm.c **** 
 264:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 265:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 266:Generated_Source\PSoC4/cyPm.c **** 
 267:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 268:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 269:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 270:Generated_Source\PSoC4/cyPm.c ****          */
 271:Generated_Source\PSoC4/cyPm.c ****     }
 272:Generated_Source\PSoC4/cyPm.c **** 
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 275:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 276:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 277:Generated_Source\PSoC4/cyPm.c ****     *
 278:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 279:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 280:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 281:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 282:Generated_Source\PSoC4/cyPm.c ****     *
 283:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 284:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 285:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 286:Generated_Source\PSoC4/cyPm.c ****     *
 287:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 288:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 289:Generated_Source\PSoC4/cyPm.c ****     {
 290:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 291:Generated_Source\PSoC4/cyPm.c **** 
 292:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 293:Generated_Source\PSoC4/cyPm.c **** 
 294:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 296:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 297:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 10


 298:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 299:Generated_Source\PSoC4/cyPm.c ****     }
 300:Generated_Source\PSoC4/cyPm.c **** 
 301:Generated_Source\PSoC4/cyPm.c **** 
 302:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 303:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 304:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 305:Generated_Source\PSoC4/cyPm.c ****     *
 306:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 307:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 308:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 309:Generated_Source\PSoC4/cyPm.c ****     *
 310:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 311:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 312:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 313:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 314:Generated_Source\PSoC4/cyPm.c ****     *
 315:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 316:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 317:Generated_Source\PSoC4/cyPm.c ****     {
 318:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 319:Generated_Source\PSoC4/cyPm.c **** 
 320:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 321:Generated_Source\PSoC4/cyPm.c ****         {
 322:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 323:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 324:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 325:Generated_Source\PSoC4/cyPm.c ****             break;
 326:Generated_Source\PSoC4/cyPm.c **** 
 327:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 328:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 329:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 330:Generated_Source\PSoC4/cyPm.c ****             break;
 331:Generated_Source\PSoC4/cyPm.c **** 
 332:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 333:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 334:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 335:Generated_Source\PSoC4/cyPm.c ****             break;
 336:Generated_Source\PSoC4/cyPm.c **** 
 337:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 338:Generated_Source\PSoC4/cyPm.c ****         default:
 339:Generated_Source\PSoC4/cyPm.c ****             break;
 340:Generated_Source\PSoC4/cyPm.c ****         }
 341:Generated_Source\PSoC4/cyPm.c **** 
 342:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 343:Generated_Source\PSoC4/cyPm.c ****     }
 344:Generated_Source\PSoC4/cyPm.c **** 
 345:Generated_Source\PSoC4/cyPm.c **** 
 346:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 347:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 348:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 349:Generated_Source\PSoC4/cyPm.c ****     *
 350:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 351:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 352:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 353:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 354:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 11


 355:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 359:Generated_Source\PSoC4/cyPm.c ****     {
 360:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 361:Generated_Source\PSoC4/cyPm.c **** 
 362:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 365:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 366:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 367:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 368:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 369:Generated_Source\PSoC4/cyPm.c ****          */
 370:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 371:Generated_Source\PSoC4/cyPm.c ****         {
 372:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 373:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 374:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 375:Generated_Source\PSoC4/cyPm.c **** 
 376:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 377:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 378:Generated_Source\PSoC4/cyPm.c ****             */
 379:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 380:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 381:Generated_Source\PSoC4/cyPm.c **** 
 382:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 383:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 384:Generated_Source\PSoC4/cyPm.c ****         }
 385:Generated_Source\PSoC4/cyPm.c **** 
 386:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 387:Generated_Source\PSoC4/cyPm.c ****     }
 388:Generated_Source\PSoC4/cyPm.c **** 
 389:Generated_Source\PSoC4/cyPm.c **** 
 390:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 391:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 392:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 393:Generated_Source\PSoC4/cyPm.c ****     *
 394:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 395:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 396:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 397:Generated_Source\PSoC4/cyPm.c ****     *
 398:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 399:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 400:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 401:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 402:Generated_Source\PSoC4/cyPm.c ****     *
 403:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 404:Generated_Source\PSoC4/cyPm.c ****     *
 405:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 406:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 407:Generated_Source\PSoC4/cyPm.c ****     {
 408:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 409:Generated_Source\PSoC4/cyPm.c **** 
 410:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 411:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 12


 412:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 413:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 414:Generated_Source\PSoC4/cyPm.c ****          */
 415:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 416:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 417:Generated_Source\PSoC4/cyPm.c **** 
 418:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 419:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 420:Generated_Source\PSoC4/cyPm.c ****         */
 421:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 422:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 423:Generated_Source\PSoC4/cyPm.c **** 
 424:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 425:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 426:Generated_Source\PSoC4/cyPm.c **** 
 427:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 428:Generated_Source\PSoC4/cyPm.c ****     }
 429:Generated_Source\PSoC4/cyPm.c **** 
 430:Generated_Source\PSoC4/cyPm.c **** #else
 431:Generated_Source\PSoC4/cyPm.c **** 
 432:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 433:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupHoldoff
 434:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 435:Generated_Source\PSoC4/cyPm.c ****     *
 436:Generated_Source\PSoC4/cyPm.c ****     * Sets the Deep Sleep wakeup time by scaling the hold-off to the HFCLK
 437:Generated_Source\PSoC4/cyPm.c ****     * frequency.
 438:Generated_Source\PSoC4/cyPm.c ****     *
 439:Generated_Source\PSoC4/cyPm.c ****     * This function must be called before increasing HFCLK clock frequency. It can
 440:Generated_Source\PSoC4/cyPm.c ****     * optionally be called after lowering HFCLK clock frequency in order to improve
 441:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time.
 442:Generated_Source\PSoC4/cyPm.c ****     *
 443:Generated_Source\PSoC4/cyPm.c ****     * It is functionally acceptable to leave the default hold-off setting, but
 444:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time may exceed the specification.
 445:Generated_Source\PSoC4/cyPm.c ****     *
 446:Generated_Source\PSoC4/cyPm.c ****     * This function is applicable only for the 4000 device family.
 447:Generated_Source\PSoC4/cyPm.c ****     *
 448:Generated_Source\PSoC4/cyPm.c ****     * \param hfclkFrequencyMhz The HFCLK frequency in MHz.
 449:Generated_Source\PSoC4/cyPm.c ****     *
 450:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 451:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz)
 452:Generated_Source\PSoC4/cyPm.c ****     {
 216              		.loc 1 452 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL13:
 453:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 454:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT) * hfclkFrequencyMhz) >> 16u) + 1u;
 222              		.loc 1 454 0
 223 0000 034B     		ldr	r3, .L12
 224 0002 5843     		muls	r0, r3
 225              	.LVL14:
 226 0004 000C     		lsrs	r0, r0, #16
 227 0006 0130     		adds	r0, r0, #1
 453:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 228              		.loc 1 453 0
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 13


 229 0008 024B     		ldr	r3, .L12+4
 230 000a 1860     		str	r0, [r3]
 455:Generated_Source\PSoC4/cyPm.c ****     }
 231              		.loc 1 455 0
 232              		@ sp needed
 233 000c 7047     		bx	lr
 234              	.L13:
 235 000e C046     		.align	2
 236              	.L12:
 237 0010 AA2A0500 		.word	338602
 238 0014 04000340 		.word	1073938436
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	CySysPmSetWakeupHoldoff, .-CySysPmSetWakeupHoldoff
 242              		.text
 243              	.Letext0:
 244              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 245              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 246              		.section	.debug_info,"",%progbits
 247              	.Ldebug_info0:
 248 0000 DD010000 		.4byte	0x1dd
 249 0004 0400     		.2byte	0x4
 250 0006 00000000 		.4byte	.Ldebug_abbrev0
 251 000a 04       		.byte	0x4
 252 000b 01       		.uleb128 0x1
 253 000c C7010000 		.4byte	.LASF29
 254 0010 0C       		.byte	0xc
 255 0011 9D010000 		.4byte	.LASF30
 256 0015 19000000 		.4byte	.LASF31
 257 0019 00000000 		.4byte	.Ldebug_ranges0+0
 258 001d 00000000 		.4byte	0
 259 0021 00000000 		.4byte	.Ldebug_line0
 260 0025 02       		.uleb128 0x2
 261 0026 01       		.byte	0x1
 262 0027 06       		.byte	0x6
 263 0028 59020000 		.4byte	.LASF0
 264 002c 02       		.uleb128 0x2
 265 002d 01       		.byte	0x1
 266 002e 08       		.byte	0x8
 267 002f 96000000 		.4byte	.LASF1
 268 0033 02       		.uleb128 0x2
 269 0034 02       		.byte	0x2
 270 0035 05       		.byte	0x5
 271 0036 79010000 		.4byte	.LASF2
 272 003a 02       		.uleb128 0x2
 273 003b 02       		.byte	0x2
 274 003c 07       		.byte	0x7
 275 003d 66000000 		.4byte	.LASF3
 276 0041 02       		.uleb128 0x2
 277 0042 04       		.byte	0x4
 278 0043 05       		.byte	0x5
 279 0044 94010000 		.4byte	.LASF4
 280 0048 02       		.uleb128 0x2
 281 0049 04       		.byte	0x4
 282 004a 07       		.byte	0x7
 283 004b B3000000 		.4byte	.LASF5
 284 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 14


 285 0050 08       		.byte	0x8
 286 0051 05       		.byte	0x5
 287 0052 4E010000 		.4byte	.LASF6
 288 0056 02       		.uleb128 0x2
 289 0057 08       		.byte	0x8
 290 0058 07       		.byte	0x7
 291 0059 7F000000 		.4byte	.LASF7
 292 005d 03       		.uleb128 0x3
 293 005e 04       		.byte	0x4
 294 005f 05       		.byte	0x5
 295 0060 696E7400 		.ascii	"int\000"
 296 0064 02       		.uleb128 0x2
 297 0065 04       		.byte	0x4
 298 0066 07       		.byte	0x7
 299 0067 22010000 		.4byte	.LASF8
 300 006b 04       		.uleb128 0x4
 301 006c C5000000 		.4byte	.LASF9
 302 0070 02       		.byte	0x2
 303 0071 FB01     		.2byte	0x1fb
 304 0073 2C000000 		.4byte	0x2c
 305 0077 04       		.uleb128 0x4
 306 0078 FD000000 		.4byte	.LASF10
 307 007c 02       		.byte	0x2
 308 007d FC01     		.2byte	0x1fc
 309 007f 3A000000 		.4byte	0x3a
 310 0083 04       		.uleb128 0x4
 311 0084 04010000 		.4byte	.LASF11
 312 0088 02       		.byte	0x2
 313 0089 FD01     		.2byte	0x1fd
 314 008b 48000000 		.4byte	0x48
 315 008f 02       		.uleb128 0x2
 316 0090 04       		.byte	0x4
 317 0091 04       		.byte	0x4
 318 0092 79000000 		.4byte	.LASF12
 319 0096 02       		.uleb128 0x2
 320 0097 08       		.byte	0x8
 321 0098 04       		.byte	0x4
 322 0099 F6000000 		.4byte	.LASF13
 323 009d 02       		.uleb128 0x2
 324 009e 01       		.byte	0x1
 325 009f 08       		.byte	0x8
 326 00a0 66010000 		.4byte	.LASF14
 327 00a4 04       		.uleb128 0x4
 328 00a5 00000000 		.4byte	.LASF15
 329 00a9 02       		.byte	0x2
 330 00aa A602     		.2byte	0x2a6
 331 00ac B0000000 		.4byte	0xb0
 332 00b0 05       		.uleb128 0x5
 333 00b1 77000000 		.4byte	0x77
 334 00b5 04       		.uleb128 0x4
 335 00b6 06000000 		.4byte	.LASF16
 336 00ba 02       		.byte	0x2
 337 00bb A702     		.2byte	0x2a7
 338 00bd C1000000 		.4byte	0xc1
 339 00c1 05       		.uleb128 0x5
 340 00c2 83000000 		.4byte	0x83
 341 00c6 02       		.uleb128 0x2
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 15


 342 00c7 08       		.byte	0x8
 343 00c8 04       		.byte	0x4
 344 00c9 BB010000 		.4byte	.LASF17
 345 00cd 02       		.uleb128 0x2
 346 00ce 04       		.byte	0x4
 347 00cf 07       		.byte	0x7
 348 00d0 45010000 		.4byte	.LASF18
 349 00d4 06       		.uleb128 0x6
 350 00d5 0C000000 		.4byte	.LASF19
 351 00d9 01       		.byte	0x1
 352 00da 21       		.byte	0x21
 353 00db 00000000 		.4byte	.LFB1
 354 00df 1C000000 		.4byte	.LFE1-.LFB1
 355 00e3 01       		.uleb128 0x1
 356 00e4 9C       		.byte	0x9c
 357 00e5 0B010000 		.4byte	0x10b
 358 00e9 07       		.uleb128 0x7
 359 00ea A4000000 		.4byte	.LASF21
 360 00ee 01       		.byte	0x1
 361 00ef 23       		.byte	0x23
 362 00f0 6B000000 		.4byte	0x6b
 363 00f4 00000000 		.4byte	.LLST0
 364 00f8 08       		.uleb128 0x8
 365 00f9 06000000 		.4byte	.LVL0
 366 00fd B4010000 		.4byte	0x1b4
 367 0101 08       		.uleb128 0x8
 368 0102 16000000 		.4byte	.LVL1
 369 0106 BF010000 		.4byte	0x1bf
 370 010a 00       		.byte	0
 371 010b 06       		.uleb128 0x6
 372 010c 83010000 		.4byte	.LASF20
 373 0110 01       		.byte	0x1
 374 0111 40       		.byte	0x40
 375 0112 00000000 		.4byte	.LFB2
 376 0116 B4000000 		.4byte	.LFE2-.LFB2
 377 011a 01       		.uleb128 0x1
 378 011b 9C       		.byte	0x9c
 379 011c 8D010000 		.4byte	0x18d
 380 0120 07       		.uleb128 0x7
 381 0121 A4000000 		.4byte	.LASF21
 382 0125 01       		.byte	0x1
 383 0126 42       		.byte	0x42
 384 0127 6B000000 		.4byte	0x6b
 385 012b 13000000 		.4byte	.LLST1
 386 012f 09       		.uleb128 0x9
 387 0130 6B010000 		.4byte	.LASF22
 388 0134 01       		.byte	0x1
 389 0135 48       		.byte	0x48
 390 0136 C1000000 		.4byte	0xc1
 391 013a 02       		.uleb128 0x2
 392 013b 91       		.byte	0x91
 393 013c 74       		.sleb128 -12
 394 013d 07       		.uleb128 0x7
 395 013e 5F000000 		.4byte	.LASF23
 396 0142 01       		.byte	0x1
 397 0143 4C       		.byte	0x4c
 398 0144 83000000 		.4byte	0x83
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 16


 399 0148 26000000 		.4byte	.LLST2
 400 014c 08       		.uleb128 0x8
 401 014d 0C000000 		.4byte	.LVL3
 402 0151 B4010000 		.4byte	0x1b4
 403 0155 0A       		.uleb128 0xa
 404 0156 6A000000 		.4byte	.LVL7
 405 015a CA010000 		.4byte	0x1ca
 406 015e 69010000 		.4byte	0x169
 407 0162 0B       		.uleb128 0xb
 408 0163 01       		.uleb128 0x1
 409 0164 50       		.byte	0x50
 410 0165 02       		.uleb128 0x2
 411 0166 08       		.byte	0x8
 412 0167 23       		.byte	0x23
 413 0168 00       		.byte	0
 414 0169 0A       		.uleb128 0xa
 415 016a 86000000 		.4byte	.LVL10
 416 016e D5010000 		.4byte	0x1d5
 417 0172 7C010000 		.4byte	0x17c
 418 0176 0B       		.uleb128 0xb
 419 0177 01       		.uleb128 0x1
 420 0178 50       		.byte	0x50
 421 0179 01       		.uleb128 0x1
 422 017a 36       		.byte	0x36
 423 017b 00       		.byte	0
 424 017c 0C       		.uleb128 0xc
 425 017d 8C000000 		.4byte	.LVL11
 426 0181 BF010000 		.4byte	0x1bf
 427 0185 0B       		.uleb128 0xb
 428 0186 01       		.uleb128 0x1
 429 0187 50       		.byte	0x50
 430 0188 02       		.uleb128 0x2
 431 0189 74       		.byte	0x74
 432 018a 00       		.sleb128 0
 433 018b 00       		.byte	0
 434 018c 00       		.byte	0
 435 018d 0D       		.uleb128 0xd
 436 018e 65020000 		.4byte	.LASF24
 437 0192 01       		.byte	0x1
 438 0193 C301     		.2byte	0x1c3
 439 0195 00000000 		.4byte	.LFB3
 440 0199 18000000 		.4byte	.LFE3-.LFB3
 441 019d 01       		.uleb128 0x1
 442 019e 9C       		.byte	0x9c
 443 019f B4010000 		.4byte	0x1b4
 444 01a3 0E       		.uleb128 0xe
 445 01a4 CB000000 		.4byte	.LASF32
 446 01a8 01       		.byte	0x1
 447 01a9 C301     		.2byte	0x1c3
 448 01ab 83000000 		.4byte	0x83
 449 01af 50000000 		.4byte	.LLST3
 450 01b3 00       		.byte	0
 451 01b4 0F       		.uleb128 0xf
 452 01b5 0B010000 		.4byte	.LASF25
 453 01b9 0B010000 		.4byte	.LASF25
 454 01bd 03       		.byte	0x3
 455 01be F8       		.byte	0xf8
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 17


 456 01bf 0F       		.uleb128 0xf
 457 01c0 2F010000 		.4byte	.LASF26
 458 01c4 2F010000 		.4byte	.LASF26
 459 01c8 03       		.byte	0x3
 460 01c9 F9       		.byte	0xf9
 461 01ca 0F       		.uleb128 0xf
 462 01cb 5C010000 		.4byte	.LASF27
 463 01cf 5C010000 		.4byte	.LASF27
 464 01d3 03       		.byte	0x3
 465 01d4 ED       		.byte	0xed
 466 01d5 0F       		.uleb128 0xf
 467 01d6 DD000000 		.4byte	.LASF28
 468 01da DD000000 		.4byte	.LASF28
 469 01de 03       		.byte	0x3
 470 01df 59       		.byte	0x59
 471 01e0 00       		.byte	0
 472              		.section	.debug_abbrev,"",%progbits
 473              	.Ldebug_abbrev0:
 474 0000 01       		.uleb128 0x1
 475 0001 11       		.uleb128 0x11
 476 0002 01       		.byte	0x1
 477 0003 25       		.uleb128 0x25
 478 0004 0E       		.uleb128 0xe
 479 0005 13       		.uleb128 0x13
 480 0006 0B       		.uleb128 0xb
 481 0007 03       		.uleb128 0x3
 482 0008 0E       		.uleb128 0xe
 483 0009 1B       		.uleb128 0x1b
 484 000a 0E       		.uleb128 0xe
 485 000b 55       		.uleb128 0x55
 486 000c 17       		.uleb128 0x17
 487 000d 11       		.uleb128 0x11
 488 000e 01       		.uleb128 0x1
 489 000f 10       		.uleb128 0x10
 490 0010 17       		.uleb128 0x17
 491 0011 00       		.byte	0
 492 0012 00       		.byte	0
 493 0013 02       		.uleb128 0x2
 494 0014 24       		.uleb128 0x24
 495 0015 00       		.byte	0
 496 0016 0B       		.uleb128 0xb
 497 0017 0B       		.uleb128 0xb
 498 0018 3E       		.uleb128 0x3e
 499 0019 0B       		.uleb128 0xb
 500 001a 03       		.uleb128 0x3
 501 001b 0E       		.uleb128 0xe
 502 001c 00       		.byte	0
 503 001d 00       		.byte	0
 504 001e 03       		.uleb128 0x3
 505 001f 24       		.uleb128 0x24
 506 0020 00       		.byte	0
 507 0021 0B       		.uleb128 0xb
 508 0022 0B       		.uleb128 0xb
 509 0023 3E       		.uleb128 0x3e
 510 0024 0B       		.uleb128 0xb
 511 0025 03       		.uleb128 0x3
 512 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 18


 513 0027 00       		.byte	0
 514 0028 00       		.byte	0
 515 0029 04       		.uleb128 0x4
 516 002a 16       		.uleb128 0x16
 517 002b 00       		.byte	0
 518 002c 03       		.uleb128 0x3
 519 002d 0E       		.uleb128 0xe
 520 002e 3A       		.uleb128 0x3a
 521 002f 0B       		.uleb128 0xb
 522 0030 3B       		.uleb128 0x3b
 523 0031 05       		.uleb128 0x5
 524 0032 49       		.uleb128 0x49
 525 0033 13       		.uleb128 0x13
 526 0034 00       		.byte	0
 527 0035 00       		.byte	0
 528 0036 05       		.uleb128 0x5
 529 0037 35       		.uleb128 0x35
 530 0038 00       		.byte	0
 531 0039 49       		.uleb128 0x49
 532 003a 13       		.uleb128 0x13
 533 003b 00       		.byte	0
 534 003c 00       		.byte	0
 535 003d 06       		.uleb128 0x6
 536 003e 2E       		.uleb128 0x2e
 537 003f 01       		.byte	0x1
 538 0040 3F       		.uleb128 0x3f
 539 0041 19       		.uleb128 0x19
 540 0042 03       		.uleb128 0x3
 541 0043 0E       		.uleb128 0xe
 542 0044 3A       		.uleb128 0x3a
 543 0045 0B       		.uleb128 0xb
 544 0046 3B       		.uleb128 0x3b
 545 0047 0B       		.uleb128 0xb
 546 0048 27       		.uleb128 0x27
 547 0049 19       		.uleb128 0x19
 548 004a 11       		.uleb128 0x11
 549 004b 01       		.uleb128 0x1
 550 004c 12       		.uleb128 0x12
 551 004d 06       		.uleb128 0x6
 552 004e 40       		.uleb128 0x40
 553 004f 18       		.uleb128 0x18
 554 0050 9742     		.uleb128 0x2117
 555 0052 19       		.uleb128 0x19
 556 0053 01       		.uleb128 0x1
 557 0054 13       		.uleb128 0x13
 558 0055 00       		.byte	0
 559 0056 00       		.byte	0
 560 0057 07       		.uleb128 0x7
 561 0058 34       		.uleb128 0x34
 562 0059 00       		.byte	0
 563 005a 03       		.uleb128 0x3
 564 005b 0E       		.uleb128 0xe
 565 005c 3A       		.uleb128 0x3a
 566 005d 0B       		.uleb128 0xb
 567 005e 3B       		.uleb128 0x3b
 568 005f 0B       		.uleb128 0xb
 569 0060 49       		.uleb128 0x49
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 19


 570 0061 13       		.uleb128 0x13
 571 0062 02       		.uleb128 0x2
 572 0063 17       		.uleb128 0x17
 573 0064 00       		.byte	0
 574 0065 00       		.byte	0
 575 0066 08       		.uleb128 0x8
 576 0067 898201   		.uleb128 0x4109
 577 006a 00       		.byte	0
 578 006b 11       		.uleb128 0x11
 579 006c 01       		.uleb128 0x1
 580 006d 31       		.uleb128 0x31
 581 006e 13       		.uleb128 0x13
 582 006f 00       		.byte	0
 583 0070 00       		.byte	0
 584 0071 09       		.uleb128 0x9
 585 0072 34       		.uleb128 0x34
 586 0073 00       		.byte	0
 587 0074 03       		.uleb128 0x3
 588 0075 0E       		.uleb128 0xe
 589 0076 3A       		.uleb128 0x3a
 590 0077 0B       		.uleb128 0xb
 591 0078 3B       		.uleb128 0x3b
 592 0079 0B       		.uleb128 0xb
 593 007a 49       		.uleb128 0x49
 594 007b 13       		.uleb128 0x13
 595 007c 02       		.uleb128 0x2
 596 007d 18       		.uleb128 0x18
 597 007e 00       		.byte	0
 598 007f 00       		.byte	0
 599 0080 0A       		.uleb128 0xa
 600 0081 898201   		.uleb128 0x4109
 601 0084 01       		.byte	0x1
 602 0085 11       		.uleb128 0x11
 603 0086 01       		.uleb128 0x1
 604 0087 31       		.uleb128 0x31
 605 0088 13       		.uleb128 0x13
 606 0089 01       		.uleb128 0x1
 607 008a 13       		.uleb128 0x13
 608 008b 00       		.byte	0
 609 008c 00       		.byte	0
 610 008d 0B       		.uleb128 0xb
 611 008e 8A8201   		.uleb128 0x410a
 612 0091 00       		.byte	0
 613 0092 02       		.uleb128 0x2
 614 0093 18       		.uleb128 0x18
 615 0094 9142     		.uleb128 0x2111
 616 0096 18       		.uleb128 0x18
 617 0097 00       		.byte	0
 618 0098 00       		.byte	0
 619 0099 0C       		.uleb128 0xc
 620 009a 898201   		.uleb128 0x4109
 621 009d 01       		.byte	0x1
 622 009e 11       		.uleb128 0x11
 623 009f 01       		.uleb128 0x1
 624 00a0 31       		.uleb128 0x31
 625 00a1 13       		.uleb128 0x13
 626 00a2 00       		.byte	0
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 20


 627 00a3 00       		.byte	0
 628 00a4 0D       		.uleb128 0xd
 629 00a5 2E       		.uleb128 0x2e
 630 00a6 01       		.byte	0x1
 631 00a7 3F       		.uleb128 0x3f
 632 00a8 19       		.uleb128 0x19
 633 00a9 03       		.uleb128 0x3
 634 00aa 0E       		.uleb128 0xe
 635 00ab 3A       		.uleb128 0x3a
 636 00ac 0B       		.uleb128 0xb
 637 00ad 3B       		.uleb128 0x3b
 638 00ae 05       		.uleb128 0x5
 639 00af 27       		.uleb128 0x27
 640 00b0 19       		.uleb128 0x19
 641 00b1 11       		.uleb128 0x11
 642 00b2 01       		.uleb128 0x1
 643 00b3 12       		.uleb128 0x12
 644 00b4 06       		.uleb128 0x6
 645 00b5 40       		.uleb128 0x40
 646 00b6 18       		.uleb128 0x18
 647 00b7 9742     		.uleb128 0x2117
 648 00b9 19       		.uleb128 0x19
 649 00ba 01       		.uleb128 0x1
 650 00bb 13       		.uleb128 0x13
 651 00bc 00       		.byte	0
 652 00bd 00       		.byte	0
 653 00be 0E       		.uleb128 0xe
 654 00bf 05       		.uleb128 0x5
 655 00c0 00       		.byte	0
 656 00c1 03       		.uleb128 0x3
 657 00c2 0E       		.uleb128 0xe
 658 00c3 3A       		.uleb128 0x3a
 659 00c4 0B       		.uleb128 0xb
 660 00c5 3B       		.uleb128 0x3b
 661 00c6 05       		.uleb128 0x5
 662 00c7 49       		.uleb128 0x49
 663 00c8 13       		.uleb128 0x13
 664 00c9 02       		.uleb128 0x2
 665 00ca 17       		.uleb128 0x17
 666 00cb 00       		.byte	0
 667 00cc 00       		.byte	0
 668 00cd 0F       		.uleb128 0xf
 669 00ce 2E       		.uleb128 0x2e
 670 00cf 00       		.byte	0
 671 00d0 3F       		.uleb128 0x3f
 672 00d1 19       		.uleb128 0x19
 673 00d2 3C       		.uleb128 0x3c
 674 00d3 19       		.uleb128 0x19
 675 00d4 6E       		.uleb128 0x6e
 676 00d5 0E       		.uleb128 0xe
 677 00d6 03       		.uleb128 0x3
 678 00d7 0E       		.uleb128 0xe
 679 00d8 3A       		.uleb128 0x3a
 680 00d9 0B       		.uleb128 0xb
 681 00da 3B       		.uleb128 0x3b
 682 00db 0B       		.uleb128 0xb
 683 00dc 00       		.byte	0
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 21


 684 00dd 00       		.byte	0
 685 00de 00       		.byte	0
 686              		.section	.debug_loc,"",%progbits
 687              	.Ldebug_loc0:
 688              	.LLST0:
 689 0000 06000000 		.4byte	.LVL0
 690 0004 15000000 		.4byte	.LVL1-1
 691 0008 0100     		.2byte	0x1
 692 000a 50       		.byte	0x50
 693 000b 00000000 		.4byte	0
 694 000f 00000000 		.4byte	0
 695              	.LLST1:
 696 0013 0E000000 		.4byte	.LVL4
 697 0017 8E000000 		.4byte	.LVL12
 698 001b 0100     		.2byte	0x1
 699 001d 54       		.byte	0x54
 700 001e 00000000 		.4byte	0
 701 0022 00000000 		.4byte	0
 702              	.LLST2:
 703 0026 08000000 		.4byte	.LVL2
 704 002a 34000000 		.4byte	.LVL5
 705 002e 0200     		.2byte	0x2
 706 0030 30       		.byte	0x30
 707 0031 9F       		.byte	0x9f
 708 0032 34000000 		.4byte	.LVL5
 709 0036 46000000 		.4byte	.LVL6
 710 003a 0100     		.2byte	0x1
 711 003c 51       		.byte	0x51
 712 003d 72000000 		.4byte	.LVL8
 713 0041 78000000 		.4byte	.LVL9
 714 0045 0100     		.2byte	0x1
 715 0047 53       		.byte	0x53
 716 0048 00000000 		.4byte	0
 717 004c 00000000 		.4byte	0
 718              	.LLST3:
 719 0050 00000000 		.4byte	.LVL13
 720 0054 04000000 		.4byte	.LVL14
 721 0058 0100     		.2byte	0x1
 722 005a 50       		.byte	0x50
 723 005b 04000000 		.4byte	.LVL14
 724 005f 18000000 		.4byte	.LFE3
 725 0063 0400     		.2byte	0x4
 726 0065 F3       		.byte	0xf3
 727 0066 01       		.uleb128 0x1
 728 0067 50       		.byte	0x50
 729 0068 9F       		.byte	0x9f
 730 0069 00000000 		.4byte	0
 731 006d 00000000 		.4byte	0
 732              		.section	.debug_aranges,"",%progbits
 733 0000 2C000000 		.4byte	0x2c
 734 0004 0200     		.2byte	0x2
 735 0006 00000000 		.4byte	.Ldebug_info0
 736 000a 04       		.byte	0x4
 737 000b 00       		.byte	0
 738 000c 0000     		.2byte	0
 739 000e 0000     		.2byte	0
 740 0010 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 22


 741 0014 1C000000 		.4byte	.LFE1-.LFB1
 742 0018 00000000 		.4byte	.LFB2
 743 001c B4000000 		.4byte	.LFE2-.LFB2
 744 0020 00000000 		.4byte	.LFB3
 745 0024 18000000 		.4byte	.LFE3-.LFB3
 746 0028 00000000 		.4byte	0
 747 002c 00000000 		.4byte	0
 748              		.section	.debug_ranges,"",%progbits
 749              	.Ldebug_ranges0:
 750 0000 00000000 		.4byte	.LFB1
 751 0004 1C000000 		.4byte	.LFE1
 752 0008 00000000 		.4byte	.LFB2
 753 000c B4000000 		.4byte	.LFE2
 754 0010 00000000 		.4byte	.LFB3
 755 0014 18000000 		.4byte	.LFE3
 756 0018 00000000 		.4byte	0
 757 001c 00000000 		.4byte	0
 758              		.section	.debug_line,"",%progbits
 759              	.Ldebug_line0:
 760 0000 A4000000 		.section	.debug_str,"MS",%progbits,1
 760      02004C00 
 760      00000201 
 760      FB0E0D00 
 760      01010101 
 761              	.LASF15:
 762 0000 72656731 		.ascii	"reg16\000"
 762      3600
 763              	.LASF16:
 764 0006 72656733 		.ascii	"reg32\000"
 764      3200
 765              	.LASF19:
 766 000c 43795379 		.ascii	"CySysPmSleep\000"
 766      73506D53 
 766      6C656570 
 766      00
 767              	.LASF31:
 768 0019 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\PSoC Creator\\touch-panel"
 768      635C486F 
 768      6D655C44 
 768      6F63756D 
 768      656E7473 
 769 0046 5C434330 		.ascii	"\\CC03\\CC03_CSX\\wk1.cydsn\000"
 769      335C4343 
 769      30335F43 
 769      53585C77 
 769      6B312E63 
 770              	.LASF23:
 771 005f 72656754 		.ascii	"regTmp\000"
 771      6D7000
 772              	.LASF3:
 773 0066 73686F72 		.ascii	"short unsigned int\000"
 773      7420756E 
 773      7369676E 
 773      65642069 
 773      6E7400
 774              	.LASF12:
 775 0079 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 23


 775      7400
 776              	.LASF7:
 777 007f 6C6F6E67 		.ascii	"long long unsigned int\000"
 777      206C6F6E 
 777      6720756E 
 777      7369676E 
 777      65642069 
 778              	.LASF1:
 779 0096 756E7369 		.ascii	"unsigned char\000"
 779      676E6564 
 779      20636861 
 779      7200
 780              	.LASF21:
 781 00a4 696E7465 		.ascii	"interruptState\000"
 781      72727570 
 781      74537461 
 781      746500
 782              	.LASF5:
 783 00b3 6C6F6E67 		.ascii	"long unsigned int\000"
 783      20756E73 
 783      69676E65 
 783      6420696E 
 783      7400
 784              	.LASF9:
 785 00c5 75696E74 		.ascii	"uint8\000"
 785      3800
 786              	.LASF32:
 787 00cb 6866636C 		.ascii	"hfclkFrequencyMhz\000"
 787      6B467265 
 787      7175656E 
 787      63794D68 
 787      7A00
 788              	.LASF28:
 789 00dd 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 789      73436C6B 
 789      57726974 
 789      65486663 
 789      6C6B4469 
 790              	.LASF13:
 791 00f6 646F7562 		.ascii	"double\000"
 791      6C6500
 792              	.LASF10:
 793 00fd 75696E74 		.ascii	"uint16\000"
 793      313600
 794              	.LASF11:
 795 0104 75696E74 		.ascii	"uint32\000"
 795      333200
 796              	.LASF25:
 797 010b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 797      74657243 
 797      72697469 
 797      63616C53 
 797      65637469 
 798              	.LASF8:
 799 0122 756E7369 		.ascii	"unsigned int\000"
 799      676E6564 
 799      20696E74 
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 24


 799      00
 800              	.LASF26:
 801 012f 43794578 		.ascii	"CyExitCriticalSection\000"
 801      69744372 
 801      69746963 
 801      616C5365 
 801      6374696F 
 802              	.LASF18:
 803 0145 73697A65 		.ascii	"sizetype\000"
 803      74797065 
 803      00
 804              	.LASF6:
 805 014e 6C6F6E67 		.ascii	"long long int\000"
 805      206C6F6E 
 805      6720696E 
 805      7400
 806              	.LASF27:
 807 015c 43794465 		.ascii	"CyDelayUs\000"
 807      6C617955 
 807      7300
 808              	.LASF14:
 809 0166 63686172 		.ascii	"char\000"
 809      00
 810              	.LASF22:
 811 016b 706C6C52 		.ascii	"pllResoreFlag\000"
 811      65736F72 
 811      65466C61 
 811      6700
 812              	.LASF2:
 813 0179 73686F72 		.ascii	"short int\000"
 813      7420696E 
 813      7400
 814              	.LASF20:
 815 0183 43795379 		.ascii	"CySysPmDeepSleep\000"
 815      73506D44 
 815      65657053 
 815      6C656570 
 815      00
 816              	.LASF4:
 817 0194 6C6F6E67 		.ascii	"long int\000"
 817      20696E74 
 817      00
 818              	.LASF30:
 819 019d 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 819      72617465 
 819      645F536F 
 819      75726365 
 819      5C50536F 
 820              	.LASF17:
 821 01bb 6C6F6E67 		.ascii	"long double\000"
 821      20646F75 
 821      626C6500 
 822              	.LASF29:
 823 01c7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 823      43313120 
 823      352E342E 
 823      31203230 
ARM GAS  C:\Users\YUANFA~1\AppData\Local\Temp\ccPdyq7Q.s 			page 25


 823      31363036 
 824 01fa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 824      20726576 
 824      6973696F 
 824      6E203233 
 824      37373135 
 825 022d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 825      67202D66 
 825      66756E63 
 825      74696F6E 
 825      2D736563 
 826              	.LASF0:
 827 0259 7369676E 		.ascii	"signed char\000"
 827      65642063 
 827      68617200 
 828              	.LASF24:
 829 0265 43795379 		.ascii	"CySysPmSetWakeupHoldoff\000"
 829      73506D53 
 829      65745761 
 829      6B657570 
 829      486F6C64 
 830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
